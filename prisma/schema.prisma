datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  age       Int     @default(25)
  gender   String    @default("unspecified")
//   files     File[]
  reminders Reminder[]
  medicalTests MedicalAnalysis[]
  createdAt DateTime @default(now())
  
}

// model File {
//   id            Int      @id @default(autoincrement())
//   filePath      String
//   extractedText String
//   userId        Int
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt

//   User User[]
// }

model MedicalAnalysis {
 id          Int      @id @default(autoincrement())
  userId      Int
  fileName    String
  text        String   @db.Text
  filePath    String
  aiFeedback  String?  @db.Text  // Store AI-generated feedback
  
  // Medical values
  alb         Float?   // Albumin
  alp         Float?   // Alkaline Phosphatase
  che         Float?   // Cholinesterase
  bil         Float?   // Bilirubin
  ast         Float?   // AST
  alt         Float?   // ALT
  chol        Float?   // Cholesterol
  crea        Float?   // Creatinine
  ggt         Float?   // GGT
  prot        Float?   // Protein
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([createdAt])
}

model Questionnaire {
  id          Int      @id @default(autoincrement())
  userId      Int
  bmi         Boolean
  fever       Boolean
  nausea      Boolean
  headache    Boolean
  diarrhea    Boolean
  fatigue     Boolean
  jaundice    Boolean
  epigastric  Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Reminder {
  id        Int      @id @default(autoincrement())
  message   String
  date      DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
